// Generated by LiveScript 1.3.0
'use strict';
var path, deepRequire, toString$ = {}.toString;
delete require.cache[__filename];
path = require('path');
deepRequire = require('./deep-require');
deepRequire = deepRequire(path.dirname(module.parent.filename));
module.exports = function(x, arg$){
  var y, ref$;
  if (arg$ != null) {
    y = arg$;
  }
  switch (ref$ = [toString$.call(x).slice(8, -1), toString$.call(y).slice(8, -1)], false) {
  case !('String' === ref$[0] && 'Object' === ref$[1]):
    return deepRequire(y, x);
  case !('Object' === ref$[0] && 'String' === ref$[1]):
    return deepRequire(x, y);
  case !('String' === ref$[0] && 'Undefined' === ref$[1]):
    return deepRequire({}, x);
  case !('Object' === ref$[0] && 'Undefined' === ref$[1]):
    return deepRequire(x);
  default:
    throw new Error('Invalid arguments');
  }
};